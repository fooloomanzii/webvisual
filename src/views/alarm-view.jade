doctype html
html
  head
    title Webvisual
    meta(name='viewport', charset='utf-8', content='width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.8')
    script(src='components/webcomponentsjs/webcomponents-lite.js')
    script(src='socket.io/socket.io.js')
    script(src='js/d3-queue.v3.min.js')
    script(src='js/database.js')
    script(src='js/data-socket-handler.js')
    script(type='text/javascript').
      // actual measuring system
      window.Name = !{JSON.stringify(name)};
      window.Labels = !{JSON.stringify(config.labels)};
      // performance
      window.Polymer = {
        dom: 'shady',
        lazyRegister: true
      };
      window.DataHandler = new DataSocketHandler('/data', window.Name);
      window.addEventListener('WebComponentsReady', function(e) {
        var el = document.getElementById('spinner');
        el.parentNode.removeChild(el);
        window.PageSelector.removeAttribute('hidden');
      });
    link(rel='import', href='components/polymer/polymer.html')
    link(rel="import", href="style/app-theme.html")
    link(rel='import', href='elements/imports.html')
  style(is="custom-style", include="app-theme").
    body {
      height: 100%;
      width: 100%;
      padding: 0;
      margin: 0;
      background: var(--bright-primary-color, #005B82);
    }
    div#background {
      background: var(--primary-color-background);
    }
    .fullbleed {
      height: 100%;
      width: 100%;
      top: 0;
      left: 0;
      position: absolute;
    }
    section.circles svg {
      height: calc((10vw + 5vh)/2);
      stroke: rgba(255, 255, 255, 0.25);
      stroke-width: 0.5px;
    }
    section.circles {
      z-index: 0;
      position: fixed;
      top: calc(50% - 10vw - 5vh);
      left: 50%;
      display: flex;
      flex-direction: row;
      justify-content: center;
      -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
      -webkit-touch-callout: none; -webkit-tap-highlight-color:rgba(0,0,0,0);
    }
    section#spinner.circles section.outer {
      animation-name: outer-animation;
      animation-duration: 4s;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      position: fixed;
      transform-origin: 0% 200%;
    }
    section.outer svg {
      animation-name: inner-animation;
      animation-duration: 4s;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      opacity: 0;
    }
    section.outer:nth-child(1), section.outer:nth-child(1) svg { animation-delay: 0.0s; fill: #39C5ff; }
    section.outer:nth-child(2), section.outer:nth-child(2) svg { animation-delay: 0.8s; fill: #1EE41A; }
    section.outer:nth-child(3), section.outer:nth-child(3) svg { animation-delay: 1.6s; fill: #E4D61A; }
    section.outer:nth-child(4), section.outer:nth-child(4) svg { animation-delay: 2.4s; fill: #E45D1A; }
    section.outer:nth-child(5), section.outer:nth-child(5) svg { animation-delay: 3.2s; fill: #E41A1A; }
    @keyframes inner-animation {
      0%   {opacity: 0.8; transform: rotate(0deg) scale(0.5);}
      50%  {opacity: 1; transform: rotate(180deg) scale(1);}
      100% {opacity: 0.8; transform: rotate(360deg) scale(0.5);}
    }
    @keyframes outer-animation {
      0%   {transform: rotate(0deg)}
      50%  {transform: rotate(-180deg)}
      100% {transform: rotate(-360deg)}
    }

  body.fullbleed
    //- START-ANIMATION
    #background.fullbleed
    section#spinner.circles
      each val in [1, 2, 3, 4, 5]
        section.outer
          svg(viewbox='0 0 48 48')
            g#g00(transform='matrix(0.41959876,0,0,-0.41984392,0,55.269513)')
              g#g01(transform='scale(0.1,0.1)')
                path#Logo(d='m 503.402,705.496 c 0.157,-0.098 4.418,8.078 7.868,13.918 28.031,47.383 198.16,468.966 239.82,568.246 -56.34,18.57 -116.543,28.77 -179.125,28.77 C 256.07,1316.43 0,1060.49 0,744.762 0,692.703 7.10547,642.328 20.1484,594.41 c 35.9102,23.352 254.79,174.738 255.118,173.672 35.054,-129.023 153.136,-195.555 228.136,-62.586 z M 1009.09,1113.29 C 966.109,1011.68 821.477,670.809 782.699,594.098 706.316,455.242 584.27,325.691 418.922,318.25 224.848,309.52 122.07,383.562 66.746,476.805 162.832,296.16 353.012,173.148 571.965,173.148 c 315.91,0 571.985,255.942 571.985,571.614 0,140.48 -50.81,269.008 -134.86,368.528')

    neon-animated-pages#PageSelector.fullbleed(hidden, selected-attribute="active")
      //- LABEL SELECTION PAGE
      select-page.fullbleed()
        each Label in config.labels
          radio-button-element.labelButton(label!= Label)
            != Label
      //- MAIN-PAGE
      main-page.fullbleed(animated!= (!mobile), reproduce, notify, open-on-select)
        //- TABS
        each Label in config.labels
          tab-element.label(label!= Label)
            != Label

        //- GROUPINGKEY SELECTORS
        each Label in config.labels
          iron-selector.groupingKeySelector(attr-for-selected= "groupingkey", selected-attribute= "checked", selected!= config.preferedGroupingKeys[Label], fallback-selection!= config.preferedGroupingKeys[Label], activate-event="change")
            each GroupingKey in config.groupingKeys[Label]
              radio-button-element.lightcontext.groupingKey(groupingkey!= GroupingKey)
                != GroupingKey

        //- PANELS
        each Label, I in config.labels
          section.panel(label!= Label, animated!= (!mobile))
            each Subgroup, Name in config.groups[Label][config.preferedGroupingKeys[Label]]
              group-card(headline= Name,
                         svg= JSON.stringify(Subgroup.svg),
                         no-select-notify, notify, open-on-exceed)
                each Id, i in Subgroup.ids
                  sign-element(label!= Label,
                               id!= Id,
                               is-boolean!= config.elements[Label][Id].isBoolean,
                               unit!= config.elements[Label][Id].unit,
                               keys= JSON.stringify(config.elements[Label][Id].keys),
                               svg= JSON.stringify(config.elements[Label][Id].svg),
                               caption-keys= JSON.stringify(config.groupingKeys[Label]),
                               show-date!= (!mobile),
                               color!= config.elements[Label][Id].color,
                               bubbles,
                               selectable
                               tooltip)

        //- Elements for TOOLBAR
        sign-element.toolbar-footer(horizontal)
        table-element.toolbar-footer(highlight-exceeding)
        svg-element.toolbar-footer(initially-zoom-to-selected, notify-parent, open-on-select)

        //- FULLSCREEN-SVG-ELEMENT
        svg-element.overlay(is-fullscreen,
                            zoom-partition='3',
                            max-zoom='3',
                            min-zoom='0.75',
                            notify-parent,
                            no-select-notify)
